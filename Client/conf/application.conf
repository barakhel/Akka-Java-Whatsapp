akka {
  actor {
    provider = "akka.remote.RemoteActorRefProvider"

    kryo {
      type = "graph"
      idstrategy = "incremental"
      buffer-size = 4096
      buffer-size = 4096
      use-manifests = false
      use-unsafe = false
      use-unsafe = false
      implicit-registration-logging = true
      kryo-trace = false
      resolve-subclasses = true
      mappings {
        "controllers.protocols.ClientServerProtocol$ConnectMessage" = 20,
        "controllers.protocols.ClientServerProtocol$DisconnectMessage" = 21,
        "controllers.protocols.ClientServerProtocol$ConnectedSuccessfullyMessage" = 22,
        "controllers.protocols.ClientServerProtocol$ConnectedFailedMessage" = 23,
        "controllers.protocols.ClientServerProtocol$AddUserMessage" = 24,
        "controllers.protocols.ClientServerProtocol$SomeoneLeaveMessage" = 25,
        "controllers.protocols.ClientServerProtocol$DisconnectFinalStage" = 26,
        "controllers.protocols.ClientServerProtocol$DisconnectFinished" = 27,

        "controllers.protocols.UserToUserProtocol$TextMessage" = 1000,
        "controllers.protocols.UserToUserProtocol$FileMessage" = 1001,

        "controllers.protocols.ClientServerGroupsProtocol$CreateGroupMessage" = 2000,
        "controllers.protocols.ClientServerGroupsProtocol$CreateGroupApproveMessage" = 2001,
        "controllers.protocols.ClientServerGroupsProtocol$CreateGroupDenialMessage" = 2002,
        "controllers.protocols.ClientServerGroupsProtocol$CloseGroupMessage" = 2003,
        "controllers.protocols.ClientServerGroupsProtocol$TextGroupMessage" = 2004,
        "controllers.protocols.ClientServerGroupsProtocol$RemoveFromGroupMessage" = 2005,
        "controllers.protocols.ClientServerGroupsProtocol$AddToGroupMessage" = 2006,
        "controllers.protocols.ClientServerGroupsProtocol$FileGroupMessage" = 2007,
        "controllers.protocols.ClientServerGroupsProtocol$MembersMessage" = 2008,
        "controllers.protocols.ClientServerGroupsProtocol$InitAddToGroupMessage" = 2009,
        "controllers.protocols.ClientServerGroupsProtocol$LeaveGroupMessage" = 2010,


        "controllers.protocols.UserToUserGroupProtocol$UnmuteMessage" = 3001,
        "controllers.protocols.UserToUserGroupProtocol$MuteMessage" = 3002,
        "controllers.protocols.UserToUserGroupProtocol$AdminRemoveMessage" = 3003,
        "controllers.protocols.UserToUserGroupProtocol$AdminMuteMessage" = 3004,
        "controllers.protocols.UserToUserGroupProtocol$CoadminDemoteMessage" = 3005,
        "controllers.protocols.UserToUserGroupProtocol$CoadminPremoteMessage" = 3006,
        "controllers.protocols.UserToUserGroupProtocol$InviteMessage" = 3007,
        "controllers.protocols.UserToUserGroupProtocol$RemoveMessage" = 3008,
        "controllers.protocols.UserToUserGroupProtocol$InviteAnsYesMessage" = 3009,
        "controllers.protocols.UserToUserGroupProtocol$InviteAnsNoMessage" = 3010,
        "controllers.protocols.UserToUserGroupProtocol$InviteAnsOkMessage" = 3011,
        "controllers.protocols.UserToUserGroupProtocol$ActionNotAllowedMassage" = 3012,



        "akka.actor.FunctionRef" = 4000,
        "akka.actor.Address" = 4001,
        "scala.Some" = 4002,
        "akka.stream.impl.streamref.SourceRefImpl" = 4003,
        "akka.actor.RepointableActorRef" = 4004,
        "akka.remote.RemoteActorRef" = 4005,
        "akka.actor.LocalActorRef" = 4006
      }
    }
    serializers {
      java = "akka.serialization.JavaSerializer"
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }
    serialization-bindings {
      "java.lang.String" = java
      "controllers.protocols.Abstracts.RemoteMessageInterface" =  kryo
    }

    loggers = ["akka.event.slf4j.Slf4jLogger"]
    loglevel = "DEBUG"
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"] # enable protocol
    netty.tcp {
      hostname = "127.0.0.1" # your host
      port = 0 # port
    }
  }


  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}
play.forms.binding.directFieldAccess = true
play.filters.headers.contentSecurityPolicy = null
play.filters.hosts.allowed = ["localhost:9000", "localhost:9001"]

// Add CSP header in explicitly in a custom filter.
play.filters.enabled += filters.ContentSecurityPolicyFilter
play.http.secret.key = a-long-secret-to-calm-the-rage-of-the-entropy-gods